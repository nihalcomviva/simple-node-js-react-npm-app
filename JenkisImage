pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = 'localhost:5000'
        DOCKER_CREDENTIALS_ID = 'local-docker-registry'
        MONGO_INITDB_DATABASE = 'mydatabase'
        MONGO_INITDB_ROOT_USERNAME = 'ati'
        MONGO_INITDB_ROOT_PASSWORD = 'ati1234'
        MONGO_EXPRESS_USERNAME = 'ati'
        MONGO_EXPRESS_PASSWORD = 'ati1234'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/nihalcomviva/simple-node-js-react-npm-app.git'
            }
        }

        stage('Pull Base Images') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh 'docker pull postgres:latest'
                        sh 'docker pull redis:latest'
                        sh 'docker pull mongo:latest'
                        sh 'docker pull mongo-express:latest'
                    }
                }
            }
        }

        stage('Prepare Build Environment') {
            steps {
                script {
                    // Download mongo-express if not present
                    if (!fileExists('mongo-express')) {
                        sh 'curl -L https://github.com/mongo-express/mongo-express/archive/refs/heads/master.tar.gz | tar -xzf - && mv mongo-express-master mongo-express'
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def dockerfile = '''
                    FROM mongo:latest
                    ENV MONGO_INITDB_DATABASE ${MONGO_INITDB_DATABASE}
                    ENV MONGO_INITDB_ROOT_USERNAME ${MONGO_INITDB_ROOT_USERNAME}
                    ENV MONGO_INITDB_ROOT_PASSWORD ${MONGO_INITDB_ROOT_PASSWORD}

                    COPY mongo-express /opt/mongo-express
                    EXPOSE 8081

                    # Configure mongo-express environment variables
                    ENV ME_CONFIG_MONGODB_ADMIN_USERNAME ${MONGO_EXPRESS_USERNAME}
                    ENV ME_CONFIG_MONGODB_ADMIN_PASSWORD ${MONGO_EXPRESS_PASSWORD}

                    CMD ["mongod", "--bind_ip", "0.0.0.0"] && ["node", "/opt/mongo-express/bin/mongo-express"]
                    '''

                    writeFile file: 'Dockerfile', text: dockerfile

                    sh 'docker build -t my-multi-service-image .'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh "docker tag my-multi-service-image ${DOCKER_REGISTRY}/my-multi-service-image:latest"
                        sh "docker push ${DOCKER_REGISTRY}/my-multi-service-image:latest"
                    }
                }
            }
        }
    }
}

